---
layout: "post"
title: "[Java] 자바 알고리즘 정렬"
date: "2017-12-21 22:20"
category: Algorithm
tags: Java Algorithm
---

## Background
알고리즘 문제를 풀이하는데 있어 정렬은 굉장히 자주 등장하는 단어입니다. 사전순으로 정렬하거나, 내림차순, 오름차순 등 다양한 방식으로 정렬이 가능한데, 이 정렬을 이용하여 문제 풀이를 매끄럽고 효율적으로 만들어 낼 수 있기도 합니다.

---
## Study

# 1. Sort  
자바에서 배열의 정렬은 `Arrays.sort` 콜렉션은 `Collections.sort`를 사용합니다.  

  일반적인 sort 알고리즘들은 숫자를 오름차순으로 정렬하는것을 기본으로 하고있습니다. 정렬하는것이 까다로워 지는 이유는 오름차순이 아닌 내림차순으로 정렬하거나, int, double, string과 같은 기본 자료형이 아니라 클래스와 같은 것들을 정렬하는 것이 어렵기 때문입니다.

# 2. Comparable
compareTo 메서드를 작성하여 클래스 내부에 선언을 해야합니다.
다음은 Point (x,y)를 가지고 있는 클래스를 x는 큰 순서대로, 같다면 y가 큰 순서대로 정렬하는 메서드입니다.

```Java
public int compareTo(Point that){
  if(this.x < that.x){
    return -1;
  }else if(this.x == that.x){
    if(this.y < that.y){
      return -1;
    }else if(this.y == that.y){
      return 0;
    }else{
      return 1;
    }
  }else{
    return 1;
  }
}
```

# 3. Comparator
Comparator를 사용하는 경우의 `sort`메서드 두번째 인자에 어떻게 정렬할 것인지 Comparator를 정의하면 됩니다.

```Java
Arrays.sort(a, new Comparator<Point>(){
  public int compare(Point p1, Point p2){
    return p1.compareTo(p2);
  }
})
```

### Why?
Comparable과 Comparator 두 가지 방법의 정렬이 있는 이유는 Comparable은 compareTo를 구현하는데 natural순서를 정의합니다. 즉, 문자열의 natural은 사전순으로 정렬하는 것입니다.

반대로 comparator는 이와 다른 순서로 정렬하고 싶을때 사용합니다. 즉, 문자열의 길이 순서로 정렬하고 싶을때, Comparator의 compare 메서드를 정의하여 정렬하면 됩니다.

---
## 연습문제
> "CaDAbcBd"와 같은 문자열을 "aAbBcCdD"와 같은 알파벳 순서로 정렬하는 코드를 작성하세요.
---
[풀이 소스 - gist](https://gist.github.com/Kirade/e8bc5dadf69fe412f0b026f4dc33b6af)
## Reference
* [백준 온라인강의](https://code.plus/lecture/9)
* [브런치 - 강관우님](https://brunch.co.kr/@kd4/7)
