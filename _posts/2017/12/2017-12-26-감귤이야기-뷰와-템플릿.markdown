---
layout: "post"
title: "[감귤이야기] 뷰와 템플릿"
date: "2017-12-26 23:14"
category: Django
tags: Django Web 감귤이야기
---

## Background
장고는 많은 웹 프레임워크들이 사용하는 MVC방식으로 설계를 합니다. 하지만 실제로 사용되는 방식은 MTV방식으로 MVC의 뷰가 템플릿으로, 컨트롤러가 뷰에서 역할을 합니다. 이러한 차이가 나는 이유는 장고를 개발한 사람들이 정확히 의미가 정의되지 않은 MVC의 의미를 해석하는 방식이 기존과 달랐기 때문입니다. 앞서 소개한 장고 모델에 이어서 뷰와 템플릿을 어떻게 설정하는지 살펴보겠습니다.

---

## URL
기본적으로 장고 프로젝트와 앱을 생성하면, 프로젝트 이름의 디렉토리 안에, `urls.py`라는 파일이 생성됩니다. 이 파일에서 프레임워크는 받은 url을 파싱하여 적절한 뷰로 요청을 전달하게 됩니다.

프로젝트 단위의 urls.py에 정의해도 웹 서비스를 제작하는데 큰 문제는 없지만, 앱 단위로 url를 관리하는것이 일반적으로 권장됩니다. 따라서 앱 이름의 디렉토리 아래에 `urls.py`라는 파일을 한 개 생성합니다.

그리고 `from django.urls import path`를 해당 파일에 추가하여 url 패턴 매칭의 역할을 하는 기능을 불러옵니다. 또한 앱의 뷰들을 불러옵니다.

```python
# urls.py
from django.urls import path
from . import views
```
> 장고 2.0 버전 이전에는 `path`가 아닌 `url`이라는 함수 사용하였습니다.

`path`를 불러왔으면, `urlpatterns`라는 튜플을 생성하여, 패턴을 검색할 `url`과 뷰를 넣어야 합니다. 첫 번째 인자로 패턴이 매칭될 `url` 두 번째 인자로 뷰 함수, 세 번째 인자로는 패턴 이름을 입력합니다.

```python
urlpatterns = [
    path('',views.indexView, name='index'),
    path('board/', views.boardView, name='board'),
]
```

> 패턴의 name 인자는 이 후, 템플릿에서 {% url 'index' %}와 같은 방식으로 해당 정보를 불러오는데 유용합니다.

## View
적절한 `url`이 정의되었다면, 해당 `url`에 접근하였을때, 매칭되어 기능을 해야하는 뷰 함수들을 정의해야 합니다. 앞서 index, board. 두 가지를 정의하였기 때문에 두 가지 뷰를 만듭니다.

```python
# views.py
from django.http import HttpResponse
from django.shortcuts import render

def indexView(request):
    return HttpResponse("You're looking at index page.")

def boardView(request):
    context = {'intro': "You're looking at board page."}
    return render(request, 'app_name/board.html', context)
```

위와 같이, 뷰 함수를 정의하면 패턴으로 매칭된 `url`이 뷰 함수에서 정의한 기능을 수행하고 뷰 함수는 템플릿을 랜더링합니다.

## Template
다음과 같이 정의하면 뷰에서 랜더링한 내용을 활용하여 템플릿에 넣을 수 있습니다.

```html
# `app_name`/board.html

<p>{{ intro }}</p>

```

---

## Reference
* [장고 튜토리얼 - 뷰와 템플릿](https://docs.djangoproject.com/en/2.0/intro/tutorial03/)
