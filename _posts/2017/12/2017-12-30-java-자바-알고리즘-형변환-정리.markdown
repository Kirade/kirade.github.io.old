---
layout: "post"
title: "[Java] 자바 알고리즘 형변환 정리"
date: "2017-12-30 01:34"
category: Algorithm
tag: Algorithm Java
---

## Background
문제를 풀다보면 자료형을 바꾸어야 할 경우가 자주 발생합니다. Java에서 다양한 가짓수로 형변환이 존재하는데 이번 기회에 정리해 보려고합니다.

---

## Study
### 1. 숫자 -> 문자열

```java
# String의 valueOf 메서드
String str = String.valueOf(num);

# 숫자 자료형의 toString 메서드
String str = Byte.toString(num);
String str = Integer.toString(num);
String str = Short.toString(num);
String str = Long.toString(num);
String str = Double.toString(num);
String str = Float.toString(num);

# `+` 연산자를 사용한 형변환
String str = "" + num;
String str = "" + 12.34;
String str = "" + 0;
```

### 2. 문자열 -> 숫자

```java
# 숫자 자료형의 valueOf()와 메서드
Byte num = Byte.valueOf(str);
Integer num = Integer.valueOf(str);
Short num = Short.valueOf(str);
Long num = Long.valueOf(str);
Double num = Double.valueOf(str);
Float num = Float.valueOf(str);

# 숫자 자료형의 parse~() 메서드
Byte num = Byte.parseByte(str);
Integer num = Integer.parseInt(str);
Short num = Short.parseShort(str);
Long num = Long.parseLong(str);
Double num = Double.parseDouble(str);
Float num = Float.parseFloat(str);
```

### 3. Binary, Decimal, Hexadecimal
```java
# Decimal -> Binary
String binstr = Integer.toString(num, 2);
String binstr = Integer.toBinaryString(num);

# Binary -> Decimal
Integer num = Integer.valueOf("10010", 2);
Integer num = Integer.parseInt("10010", 2);

# Decimal -> Hexadecimal
String hexstr = Integer.toString(num, 16);
String hexstr = Integer.toHexString(num);

# Hexadecimal -> Decimal
Integer num = Integer.valueOf("A1B2", 16);
Integer num = Integer.parseInt("A1B2", 16);
```

### 4. ASCII
```java
# 숫자 -> 아스키 코드 문자
Character ascii = (char)num;

# 아스키 코드 문자 -> 숫자
Integer num = (int)ascii;
```

## Summary
크게 3가지 메소드로 나눌 수 있을것 같습니다.
1. `valueOf()`
  `String`에서 사용되면 숫자 자료형을 문자열로 바꾸어 주는 역할을 합니다. 반면 숫자 자료형에 사용될 경우에는 인자로 `(String, radix)`를 받습니다. `radix`를 입력하지 않는 경우에는 십진수를 의미하는 숫자 10이 기본값으로 입력되어 문자열을 해당 정수형으로 반환합니다. 입력할 경우 해당하는 진수의 숫자를 반환합니다.

2. `toString()`
  말 그대로 문자열로 만들어주는 메서드 입니다. `valueOf()` 메서드와 마찬가지로 `(number, radix)`를 입력 받습니다.

3. `parse~()`
  `valueOf()`는 내부적으로 `parse~()`메서드를 가지고 있습니다. 이 메서드에 실제 형변환하는 로직이 구현되어 숫자형 자료형을 반환합니다.


---

## Reference
* [참고 블로그 - 1](http://theeye.pe.kr/archives/457)
* [참고 블로그 - 2](http://imaxicool.tistory.com/320)
