---
layout: "post"
title: "[AskDjango] 강의 노트 #7"
date: "2018-02-08 01:58"
category: Django
tags: Django AskDjango
---

## Background
* [강의 노트 #1](https://kirade.github.io/django/2018/02/01/askdjango-강의-노트-1/)
* [강의 노트 #2](https://kirade.github.io/django/2018/02/01/askdjango-강의-노트-2/)
* [강의 노트 #3](https://kirade.github.io/django/2018/02/05/askdjango-강의-노트-3/)
* [강의 노트 #4](https://kirade.github.io/django/2018/02/07/askdjango-강의-노트-4/)
* [강의 노트 #5](https://kirade.github.io/django/2018/02/08/askdjango-강의-노트-5/)
* [강의 노트 #6](https://kirade.github.io/django/2018/02/08/askdjango-강의-노트-6/)
이전 강의노트에 이어 필기를 정리합니다.

---
## Study

### User Authentication
* `django.contrib.auth` 앱에서 다양한 기능을 제공한다
  - 회원가입, 로그인, 로그아웃
- `User`모델 클래스를 획득할 때에는, 직접 모델로 접근하는 것이 아닌, helper함수를 통해 접근한다.
  - `from django.contrib. auth import get_user_model`
  - 이를 활용하면 settings에 정의된 `AUTH_USER_MODEL`을 참조할 수 있다.
- `User`와 관련된 정보를 추가할 때에는 `OneToOne`관계로 매핑된 `Profile`을 정의하는것이 좋다.
- 관계지정시 모델클래스의 참조는 `settings.AUTH_USER_MODEL`
- 모델 클래스의 획득은 `get_user_model`

### User Authentication Implementation
* 다양한 폼들이 이미 정의되어 있다.
  - `UserCreationForm`, `AuthenticationForm`등
- `@login_required`를 통해 뷰 접근을 로그인된 유저로 제한할 수 있다.

### User Authentication Custom
* 기존의 `UserCreationForm`을 상속받고 Meta 클래스 또한 상속받아, 필드를 추가하는 형태로 가능하다.
* 기존에 보여주는 필드 이외의 다른 모델의 필드를 받고 싶다면, 해당 필드를 폼 필드로 정의하고 저장할 때, 따로 저장하는 루틴이 추가되어야한다.
* clean 메서드를 통해 폼 필드 유효성 검사를하여 퀴즈와 같은 형태의 로그인 필드를 구성할 수 있다.

### select_related / prefetch_related
* `Foreignkey` 혹은 `OneToOneField`의 관계일 경우, `select_related`를 쿼리셋에 적용해 주면 JOIN을 미리하여 중복되어 발생하는 쿼리를 줄일 수 있다.
  - Post 와 Comment의 경우 `Comment.objects.all().select_related
  ('post')`
* `ManyToManyField` 혹은 `ForeignKey`의 reverse relation(1 -> N)의 경우 `prefetch_related`를 적용하여 쿼리를 줄일 수 있다.
  - Post 와 Comment, Tags의 관계에서 `Post.objects.all().prefetch_related('comment_set', 'tag_set')`


---
## Reference
* [AskDjango - VOD](https://nomade.kr/vod/django/)
