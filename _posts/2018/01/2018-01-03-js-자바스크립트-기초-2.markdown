---
layout: "post"
title: "[JS] 자바스크립트 기초 #2"
date: "2018-01-03 20:16"
category: Javascript
tags: Javascript Web
---

## Background
앞선 포스팅에서 자바스크립트에서 사용되는 자료형과 함수를 정의하는 방법과 같은 기본적인 것들을 정리하였습니다. 이번에는 HTML 혹은 CSS에 변화를 주기위해서 엘리먼트를 선택하는 기능들과, 이벤트 핸들링과 같은 것들을 간단하게 정리하겠습니다.


---

## Study
자바스크립트는 객체를 이해하는 것이 중요하다고 생각합니다. 객체에 정의되어 있는 API를 사용하거나 만들어진 정보를 활용하는 방식을 배우는 것이 자바스크립트를 배우는 첫 시작이 아닐까 생각되었습니다.

### Basic

* `window`는 최상위 객체로 자바스크립트가 제공하는 API들이 포함되어 있습니다. 기본적인 객체이기 때문에 일반적으로 API를 사용할 때 생략되어 사용할 수 있습니다.
  - `window.location` : 현재 주소의 정보. href, orgin, pathname...
  - `window.location.href` : 현재 웹 주소의 URL
  - `window.navigator` : 현재 브라우저의 정보
  - `window.screen` : 현재 디스플레이 정보
  - `winㅇow.document` : 현재 문서의 정보를 담은 객체
- 단일 Element 가져오기
  - `document.getElementById` : 해당 id 값을 엘리먼트를 가져옵니다.
- 여러개의 Element 가져오기
  - `document.getElementsByClassName` : 해당 Class 값을 가진 엘리먼트들을 가져옵니다.
  - `document.getElementsByName` : 해당 Name 값을 가진 엘리먼트들을 가져옵니다.
  - `document.getElementsByTagName` : 해당 Tag 이름을 가진 엘리먼트들을 가져옵니다.
* `callback`함수는 조건이 만족될 때 실행되는 함수입니다.  

  ```javascript
  function callback(){
    /**
     * logic
     */
  }
  ```
  - `SetTimeout(callback, 2000)` : 2초 뒤에 callback 함수를 실행한다. 숫자 반환
  - `SetInterval(callback, 2000)` : 2초 간격으로 callback 함수를 실행한다. 숫자 반환
  - `ClearTimeout(num)` : 타임아웃의 반환된 숫자를 입력하면 해당 타임아웃이 취소된다.
  - `ClearInterval(num)` : 반환된 숫자를 입력하면 해당 인터벌이 취소된다.

* 이벤트 핸들러를 활용하면 어떤 이벤트(클릭, 움직임, 키 입력 등)가 발생 하였을 때, 어떻게 행동할 것인지 설정 해 둘 수 있다.
  - HTML 속성에 추가해서 등록
    - `onclick`, `onkeydown`, `onkeyup`, `onsubmit` 등을 속성에 등록한다.
  - HTML 소스 <script> ~ </script> 안에 javascript 소스를 활용해 정의한다.
    ```javascript
    var var_1 = getElementById('example')
    var_1.onclick = function(){
      console.log("clicked!");
    }
    ```
  - `addEventListener()`를 이용한 등록
    - `object.addEventListener("click", function(){console.log("clicked!")});`

* Ajax
  ```javascript
  var req = new XMLHttpRequest;
  req.open("GET", "http://api.example.com");
  req.send();
  ```

* JSON
  - `JSON.stringify()` : 객체를 문자열로 변환
  - `JSON.parse()` : 문자열 형식을 객체로 변환

* 익명함수
  - 이름이 없는 함수로 일회성으로 사용된다.
    - 변수의 scope를 분리하여 중복을 방지할 수 있다.
    - 함수의 인자로도 사용 가능하다.  

  ```javascript
  function(){
    /*
     logic
     */
  }
  ```


---

## Reference
* [프로그래머스 자바스크립트 입문](https://programmers.co.kr/learn)
